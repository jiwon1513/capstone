기계학습적 관점 
 : cv2.threshold로 임계값을 넘어가는 값만 255 즉, 흰색으로 설정해 값으로 인정.
 이 부분에서 노이즈가 제거됨.
 : 차선 이외의 다른 부분에서의 값으로 인해 차선인식이 삐뚤어질 수(?) 있는 것은
최소 자승법으로 해결이 가능하다.
 : 아니면 화면 전체에서 검출되는 점들을 모두 찾으려는 대신, 한개 차선에 윈도우의 크기에
따라 예를 들어 30개의 점들만 검출한다는 그런 조건을 걸어서 화면 중앙부터 바깥으로
검출을 진행해 차선을 벗어난 값들을 검출하는 것을 최소화하는 방법도 있따.
 : 값들을 이어주는 것은 cv2.polyfit(점, 점, 2)으로 2차곡선으로 이어줌.

딥러닝적 관점
 : 데이터셋에 라벨을 입력해서 훈련시키는 방법을 사용하는 딥러닝 부분에서는
 노이즈 제거와 같은 부분이 영향을 끼치지 않음.
 : 이번에 찾아본 CLRNet은 적용방식이 복잡해 사용하기 쉽지 않아 보임.
 : 고로, 적용방법이 보다 쉬운 모델을 찾거나, 우리가 칼라 데이터셋에 직접 라벨을
 입력해 훈련시키는 방법을 찾아봐야 할 듯.
